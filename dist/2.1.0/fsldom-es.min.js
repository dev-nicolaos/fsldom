/* FSLDOM v2.1.0 | MIT License | github.com/dev-nicolaos/fsldom */
var e=Object.freeze({byId:function(e){if("string"==typeof e)return document.getElementById(e);console.error("FSLDOM - byID: id must be a string")},byClass:function(e){if("string"==typeof e)return Array.from(document.getElementsByClassName(e));console.error("FSLDOM - byClass: className must be a string")},byTag:function(e){if("string"==typeof e)return Array.from(document.getElementsByTagName(e));console.error("FSLDOM - byTag: tagName must be a string")},query:function(e){if("string"==typeof e)return document.querySelector(e);console.error("FSLDOM - query: selectors must be a string")},queryAll:function(e){if("string"==typeof e)return Array.from(document.querySelectorAll(e));console.error("FSLDOM - queryAll: selectors must be a string")}});var n=Object.freeze({newEl:function(e,{classList:n,id:t,html:r,text:o,data:s,listeners:i,src:l,alt:a,href:c,target:f}={}){if("string"==typeof e){const u=document.createElement(e);if(u instanceof HTMLUnknownElement&&console.info("FSLDOM - newEl: elementType is not a recognized tagname. Created element will be an instance of HTMLUnknownElement - https://developer.mozilla.org/en-US/docs/Web/API/HTMLUnknownElement"),n&&("string"==typeof n?u.className=n:Array.isArray(n)?u.className=n.join(" "):console.warn("FSLDOM - newEl: options.classList must be either a string or an array")),t&&("string"==typeof t?u.id=t:console.warn("FSLDOM - newEl: options.id must be a string")),r?"string"==typeof r?u.innerHTML=r:console.warn("FSLDOM - newEl: options.html must be a string"):o&&("string"==typeof o?u.textContent=o:console.warn("FSLDOM - newEl: options.text must be a string")),s)if("object"==typeof s)for(let e in s)u.dataset[e]=s[e];else console.warn("FSLDOM - newEl: options.data must be an object");if(i)if("object"==typeof i&&null!==i)for(let e in i)"function"==typeof i[e]?u.addEventListener(e,i[e]):Array.isArray(i[e])?i[e].forEach((n,t)=>{"function"==typeof n?u.addEventListener(e,n):console.warn(`FSLDOM - newEl: Value of options.handlers.${e}[${t}] is not a function`)}):console.warn(`FSLDOM - newEl: Value of options.handlers.${e} is not a function`);else console.warn("FSLDOM - newEl: options.handlers must be an object");return l&&("img"===e?"string"==typeof l?u.src=l:console.error("options.src must be a string"):console.warn('FSLDOM - newEl: elementType is not "img", options.src will be ignored')),a&&("img"===e?"string"==typeof a?u.alt=a:console.warn("FSLDOM - newEl: options.alt must be a string"):console.warn('FSLDOM - newEl: elementType is not "img", options.alt will be ignored')),c&&("a"===e?"string"==typeof c?u.href=c:console.error("FSLDOM - newEl: options.href must be a string"):console.warn('FSLDOM - newEl: elementType is not "a", options.href will be ignored')),f&&("a"===e?"string"==typeof f?u.target=f:console.error("FSLDOM - newEl: options.target must be a string"):console.warn('FSLDOM - newEl: elementType is not "a", options.target will be ignored')),u}console.error("FSLDOM - newEl: elementType must be a string")}});function t(e,n,t,r){if(!(t instanceof HTMLElement)&&"string"!=typeof t)return console.error(`FSLDOM - ${r}: newContent must be either an HTMLElement or a string`),!1;if("string"==typeof n){if(!(n=document.querySelector(n)))return console.error(`FSLDOM - ${r}: No elements found for target: ${n}`),!1}else if(!(n instanceof HTMLElement))return console.error(`FSLDOM - ${r}: target must be either an HTMLElement or a string`),!1;return"string"==typeof t?(n.insertAdjacentHTML(e,t),!0):!!n.insertAdjacentElement(e,t)}var r=Object.freeze({before:function(e,n){return t("beforebegin",e,n,"before")},prepend:function(e,n){return t("afterbegin",e,n,"prepend")},append:function(e,n){return t("beforeend",e,n,"append")},after:function(e,n){return t("afterend",e,n,"after")}});export default Object.assign({},e,n,r);
